<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="sendFile.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADMAAAAvCAYAAABOtfLKAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABN1JREFUaEPtl3lTE1kUxedbKCqjgogYTMK+hz0JCJKVZSAJCWsggMo6m+LMB7/z
        frfpFFDtGDoNlbLyxymK97pf3nnnnvNu//LopU9+FtTJ1CrqZGoVdTK1ijqZWsWDkGl80ymBgUmZXFiR
        2OqWxNd2ZCaVlb7xeWlq75WGpnbH9+6KeyXDJt/1Tcjy5pHsnV1K6eLfG9g//ybrpXMJRRPS+DrouMZd
        cG9kHje/k8FwTDaO/jCb/ke2P/+tpOaW8kaVnCRze1I4uFBCxdOvqhYKOq1VKe6FzGOjSO/EnGx/+ksV
        yBZPpHt0Rn7VzVol9bQlIG3dIYkZEsWzb/ocpfesCoU8J9PQ7JfhSFyKJ5d66itbR/Libbfjs4BSxEuo
        A6mhSMzxuUrgKRk2BpEtowhElgoH0toxdO0ZZ6OjGGVGOa7ufJJnrR2Oz/0InpFBkYGpD7J3aimytHEo
        r/z9Ove0JSjBwSkZiSQkODTtWErtfeMmJCxvERq35yuBJ2QaXvklNJPUjbChxXypTIRTT2R2ZeeYuUvz
        94ukjPmf3yo9PERY8MzA1MKNuUpRNZmGJpNa5schgomXNw+lJWiVFkTmVza0fPaMWrpZ89c2+5MW/421
        cqUzPYyRaPLGeKWoiswTFJlNqXHZBB6xEssnL3zdklrf142jxvjcop4+f3meWH4dHCyvxdzmxz+1TB9c
        GRQZnUlp/OKRdH5fWgLW5iBC5KICKTX2Pq2+sSObpEOlN53D5fXa+8b0QFDY3z9ZHr8LXJHBI0QoJwyR
        xUJJXpq2hDlimGRSRU6+yMT8spIAARMChcPfdQ7ytoqNJr0gb6XZ54dLM0qLUqF0OElucvor5jA1xFAE
        IoQCz0OkYzisRCCfPzg3qoyYd9pVsUgio+W1e/JVE/H2b1aKO5OhzikRTpeNN1+lFkRiq9s6TmmNzy0p
        EeZQhB6MuXzpQv9nHIXtC5M5Wh23qgBXZUZrwsbtH6bEML/VgxlFTOPIqXOJcq8Qy8zl9k6lrSuk79BY
        oogmnYnjhd+2lNz137kr3HnGmN/uciGSzBYtsxtjE6tELqXVORJWRZTI/plejIyjWDSZ0ed5b255439b
        nkrhiowNvJIyRCgRPERqMW57xC7HbPFUfL3jOsftPx1bVYIECPdQtd2yDddkOElaFkKAMqIno0wora5Q
        VIlgdhRpNREMQYhETfuP2QEeIcmc1ncDV2TY1PvFvGV2Uyqjs2ntzZjrHI6YtLrQOW50u8+itKbjq0rC
        MntBnrd13Vi3WrgiQwkRoxAhfq1xy+yMU0KZ3WPTMVuXIkExk85ZZldFCvrxdn1NL+CKTDixpqer3yq+
        nqtxcyma73za/0zxWHw9o5bZTRjMptfL3yuzi+vly9JruCLDbQ2ZD8a8t+PUbwjZbcr1+LWJePGt/z24
        IsOmIENL0tjqfMqUFr7iDkEVvvur+SSuBK7I9E/Ol5tC/HN7ng44mswqEUhTZt8j7SVckbF7MMqHtp1O
        GB/gDzpn+xvGVoS4dlrHa7gig9nf9oRk46pxpIVZ2TyShLlAiWP8gSqo49WFWAlckrHg6xnTrtkuJxsk
        Gq0/5eb03n2hKjIoxA0eGJzWLjkcX5OhcFzvl/u4R36EKsnUFupkahV1MrWKOplaRZ1MreInIuOT/wBQ
        4OSDYPWs9gAAAABJRU5ErkJggg==
</value>
  </data>
</root>